class Product
types
	public CustomString = seq of char;
	public ProductState = <New> | <Low_Use> | <High_Use>;
values
-- TODO Define values here
instance variables
	static idCounter: nat := 0;
	id: nat;
	buyPrice: nat1;
	sellPrice: nat1;
	state: ProductState;
	description: CustomString;
	--transaction: Transaction;
	--store: Store;
operations
	public Product(buyInput: nat, sellInput: nat, stateInput: ProductState, descriptionInput: CustomString) p: Product ==
		(idCounter := idCounter + 1;
		id := idCounter;
		buyPrice := buyInput;
		sellPrice := sellInput;
		state := stateInput;
		description := descriptionInput;
		)
		pre buyInput > 0 and sellInput > 0
		post buyPrice = buyInput and sellPrice = sellInput and state = stateInput and description = descriptionInput;
	
	public pure getSellPrice() res: nat ==
		return sellPrice
		pre true
		post res = sellPrice;
		
	public pure getBuyPrice() res: nat ==
		return buyPrice
		pre true
		post res = buyPrice;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Product