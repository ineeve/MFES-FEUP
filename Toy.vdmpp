-- max age should be optional, min age is mandatory
class Toy is subclass of Product
types
	public ToyCategory = <Puzzles> | <Legos> | <Cars>;
	public NotEmptyString = seq1 of char;
values
-- TODO Define values here
instance variables
	private minAge: nat;
	private maxAge: [nat]:=nil; --optional, nil as default
	private subCategory: ToyCategory;
	inv minAge < 13 and minAge > 0
operations
	public Toy: ProductState * nat * ToyCategory ==> Toy
	Toy(productState, minAgeInput, subCategoryInput) ==
		(
		idCounter := idCounter + 1;
		id := idCounter;
		state := productState;
		minAge := minAgeInput;
		subCategory := subCategoryInput;
		setBuyPrice();
		setSellPrice();
		)
		pre minAgeInput > 0 and minAgeInput < 13
		post minAge = minAgeInput and 
		subCategory = subCategoryInput and
		buyPrice <> undefined and
		sellPrice <> undefined and
		state = productState and
		id <> undefined;
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Toy