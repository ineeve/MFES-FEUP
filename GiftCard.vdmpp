class GiftCard
types
values
	private static GiftValues : set of nat1 = {10, 20, 40};
instance variables
	static idCounter: nat := 0;
	id: nat1;
	value: nat1;
	inv value in set GiftValues;
	
operations
	public GiftCard: nat1 ==> GiftCard
	GiftCard(v) ==
		(idCounter := idCounter + 1; id := idCounter; value := v; return self;)
		pre v in set GiftValues
		post id = idCounter~+1 and value = v and RESULT=self;
		
	public pure getValue: () ==> nat1 
	getValue() ==
		return value
		pre true
		post RESULT = value;
	
	public static pure getPossibleValues: () ==> set of nat1 
	getPossibleValues() == 
		return GiftValues
		pre true
		post RESULT = GiftValues;

functions

traces
-- TODO Define Combinatorial Test Traces here
end GiftCard