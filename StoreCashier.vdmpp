-- A cashier that works in a store
-- A cashier needs to authorize most most of the operations
class StoreCashier
types
	public NotEmptyString = seq1 of char;
	
instance variables
	name: NotEmptyString;
	store: Store; -- cashier workplace
	
operations
	public StoreCashier: NotEmptyString * Store ==> StoreCashier
	StoreCashier(n, w) ==
		(name := n; store := w; return self)
		pre len n > 0
		post name = n and store = w and RESULT = self;
		
	-- Get the name of the cashier	
	public pure getName: () ==> NotEmptyString
	getName() ==
		return name
		pre true
		post RESULT = name;
	
	-- Update the name of the cashier
	public setName: NotEmptyString ==> ()
	setName(n) ==
		name := n
		pre true
		post name = n;
	
	-- Get the store in which the cashier works	
	public pure getStore: () ==> Store
	getStore() ==
		return store
		pre true
		post RESULT = store;
		
	-- Register that a product was bought.
	public buyProductInCash: Product ==> ()
	buyProductInCash(p) ==
		(
		store.buyProduct(p);
		)
		pre true
		post true;
		
	-- Register that a product was bought and credit notes were created for the client.
	public buyProductInCreditNotes: Product * Client ==> ()
	buyProductInCreditNotes(p, client) ==
		(
		store.buyProductInCreditNotes(p, client.getId());
		)
		pre true
		post true;
		
	
	-- Sell to client. Receive in cash or gift cards
	public sellProduct: Product ==> ()
	sellProduct(p) ==
		(
		store.sellProduct(p);
		)
		pre true
		post true;
		
	-- Sell to client. Receive in credit notes
	public sellProductInCreditNotes: Product * Client ==> ()
	sellProductInCreditNotes(p, client) ==
		(
			store.sellProductInCreditNotes(p, client.getId());
		)
		pre true
		post true;
		
	-- Sell a giftcard to a client
	public sellGiftCard: (nat1) ==> GiftCard
	sellGiftCard(value) ==
		return store.sellGiftCard(value)
		pre true
		post true
		
end StoreCashier