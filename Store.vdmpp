class Store
types
	public NotEmptyString = seq1 of char;
	
values
-- TODO Define values here
instance variables
	location: NotEmptyString;
	products: set of Product := {};
	profitEarned: nat := 0;
	cashiers: set of StoreCashier := {};
	
	
operations
	public Store(storeLocation: NotEmptyString) s: Store ==
		location := storeLocation
		pre len storeLocation > 0
		post location = storeLocation;
	
	public addProduct(p: Product) == 
		products := products union {p}
		pre true
		post products = products~ union {p};
	
	public removeProduct(p: Product) ==
		products := products \ {p}
		pre p in set products
		post products = products~ \ {p};
		
	public getProducts() p: set of Product ==
		return products
		pre true
		post p = products;
		
	public getProfitEarned() p: nat ==
		return profitEarned
		pre true
		post p = profitEarned;
		
	public getCashiers() c: set of StoreCashier ==
		return cashiers
		pre true
		post c = cashiers;
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Store